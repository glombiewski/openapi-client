/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnsetExpireExpirationChange
 */
export interface UnsetExpireExpirationChange {
    /**
     * 
     * @type {string}
     * @memberof UnsetExpireExpirationChange
     */
    type: UnsetExpireExpirationChangeTypeEnum;
}


/**
 * @export
 */
export const UnsetExpireExpirationChangeTypeEnum = {
    UnsetExpire: 'unsetExpire'
} as const;
export type UnsetExpireExpirationChangeTypeEnum = typeof UnsetExpireExpirationChangeTypeEnum[keyof typeof UnsetExpireExpirationChangeTypeEnum];


/**
 * Check if a given object implements the UnsetExpireExpirationChange interface.
 */
export function instanceOfUnsetExpireExpirationChange(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function UnsetExpireExpirationChangeFromJSON(json: any): UnsetExpireExpirationChange {
    return UnsetExpireExpirationChangeFromJSONTyped(json, false);
}

export function UnsetExpireExpirationChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnsetExpireExpirationChange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
    };
}

export function UnsetExpireExpirationChangeToJSON(value?: UnsetExpireExpirationChange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
    };
}

