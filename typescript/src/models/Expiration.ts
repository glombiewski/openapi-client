/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DatasetDeletionType } from './DatasetDeletionType';
import {
    DatasetDeletionTypeFromJSON,
    DatasetDeletionTypeFromJSONTyped,
    DatasetDeletionTypeToJSON,
} from './DatasetDeletionType';

/**
 * 
 * @export
 * @interface Expiration
 */
export interface Expiration {
    /**
     * 
     * @type {Date}
     * @memberof Expiration
     */
    deletionTimestamp?: Date | null;
    /**
     * 
     * @type {DatasetDeletionType}
     * @memberof Expiration
     */
    deletionType: DatasetDeletionType;
}

/**
 * Check if a given object implements the Expiration interface.
 */
export function instanceOfExpiration(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "deletionType" in value;

    return isInstance;
}

export function ExpirationFromJSON(json: any): Expiration {
    return ExpirationFromJSONTyped(json, false);
}

export function ExpirationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Expiration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deletionTimestamp': !exists(json, 'deletionTimestamp') ? undefined : (json['deletionTimestamp'] === null ? null : new Date(json['deletionTimestamp'])),
        'deletionType': DatasetDeletionTypeFromJSON(json['deletionType']),
    };
}

export function ExpirationToJSON(value?: Expiration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deletionTimestamp': value.deletionTimestamp === undefined ? undefined : (value.deletionTimestamp === null ? null : value.deletionTimestamp.toISOString()),
        'deletionType': DatasetDeletionTypeToJSON(value.deletionType),
    };
}

