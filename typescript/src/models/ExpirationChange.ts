/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ExpirationWithType,
    instanceOfExpirationWithType,
    ExpirationWithTypeFromJSON,
    ExpirationWithTypeFromJSONTyped,
    ExpirationWithTypeToJSON,
} from './ExpirationWithType';
import {
    UnsetExpireExpirationChange,
    instanceOfUnsetExpireExpirationChange,
    UnsetExpireExpirationChangeFromJSON,
    UnsetExpireExpirationChangeFromJSONTyped,
    UnsetExpireExpirationChangeToJSON,
} from './UnsetExpireExpirationChange';

/**
 * @type ExpirationChange
 * 
 * @export
 */
export type ExpirationChange = { type: 'setExpire' } & ExpirationWithType | { type: 'unsetExpire' } & UnsetExpireExpirationChange;

export function ExpirationChangeFromJSON(json: any): ExpirationChange {
    return ExpirationChangeFromJSONTyped(json, false);
}

export function ExpirationChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpirationChange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'setExpire':
            return {...ExpirationWithTypeFromJSONTyped(json, true), type: 'setExpire'};
        case 'unsetExpire':
            return {...UnsetExpireExpirationChangeFromJSONTyped(json, true), type: 'unsetExpire'};
        default:
            throw new Error(`No variant of ExpirationChange exists with 'type=${json['type']}'`);
    }
}

export function ExpirationChangeToJSON(value?: ExpirationChange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'setExpire':
            return ExpirationWithTypeToJSON(value);
        case 'unsetExpire':
            return UnsetExpireExpirationChangeToJSON(value);
        default:
            throw new Error(`No variant of ExpirationChange exists with 'type=${value['type']}'`);
    }

}

