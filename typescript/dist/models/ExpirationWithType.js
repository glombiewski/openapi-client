"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpirationWithTypeToJSON = exports.ExpirationWithTypeFromJSONTyped = exports.ExpirationWithTypeFromJSON = exports.instanceOfExpirationWithType = exports.ExpirationWithTypeTypeEnum = void 0;
const runtime_1 = require("../runtime");
const DatasetDeletionType_1 = require("./DatasetDeletionType");
/**
 * @export
 */
exports.ExpirationWithTypeTypeEnum = {
    SetExpire: 'setExpire',
    UnsetExpire: 'unsetExpire'
};
/**
 * Check if a given object implements the ExpirationWithType interface.
 */
function instanceOfExpirationWithType(value) {
    let isInstance = true;
    isInstance = isInstance && "deletionType" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
exports.instanceOfExpirationWithType = instanceOfExpirationWithType;
function ExpirationWithTypeFromJSON(json) {
    return ExpirationWithTypeFromJSONTyped(json, false);
}
exports.ExpirationWithTypeFromJSON = ExpirationWithTypeFromJSON;
function ExpirationWithTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'deletionTimestamp': !(0, runtime_1.exists)(json, 'deletionTimestamp') ? undefined : (json['deletionTimestamp'] === null ? null : new Date(json['deletionTimestamp'])),
        'deletionType': (0, DatasetDeletionType_1.DatasetDeletionTypeFromJSON)(json['deletionType']),
        'type': json['type'],
    };
}
exports.ExpirationWithTypeFromJSONTyped = ExpirationWithTypeFromJSONTyped;
function ExpirationWithTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'deletionTimestamp': value.deletionTimestamp === undefined ? undefined : (value.deletionTimestamp === null ? null : value.deletionTimestamp.toISOString()),
        'deletionType': (0, DatasetDeletionType_1.DatasetDeletionTypeToJSON)(value.deletionType),
        'type': value.type,
    };
}
exports.ExpirationWithTypeToJSON = ExpirationWithTypeToJSON;
