/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Expiration } from './Expiration';
import {
    ExpirationFromJSON,
    ExpirationFromJSONTyped,
    ExpirationToJSON,
} from './Expiration';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
} from './Permission';

/**
 * 
 * @export
 * @interface DatasetAccessStatusResponse
 */
export interface DatasetAccessStatusResponse {
    /**
     * 
     * @type {Expiration}
     * @memberof DatasetAccessStatusResponse
     */
    expiration?: Expiration | null;
    /**
     * 
     * @type {string}
     * @memberof DatasetAccessStatusResponse
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof DatasetAccessStatusResponse
     */
    isAvailable: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DatasetAccessStatusResponse
     */
    isUserUpload: boolean;
    /**
     * 
     * @type {Array<Permission>}
     * @memberof DatasetAccessStatusResponse
     */
    permissions: Array<Permission>;
}

/**
 * Check if a given object implements the DatasetAccessStatusResponse interface.
 */
export function instanceOfDatasetAccessStatusResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "isAvailable" in value;
    isInstance = isInstance && "isUserUpload" in value;
    isInstance = isInstance && "permissions" in value;

    return isInstance;
}

export function DatasetAccessStatusResponseFromJSON(json: any): DatasetAccessStatusResponse {
    return DatasetAccessStatusResponseFromJSONTyped(json, false);
}

export function DatasetAccessStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatasetAccessStatusResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'expiration': !exists(json, 'expiration') ? undefined : ExpirationFromJSON(json['expiration']),
        'id': json['id'],
        'isAvailable': json['isAvailable'],
        'isUserUpload': json['isUserUpload'],
        'permissions': ((json['permissions'] as Array<any>).map(PermissionFromJSON)),
    };
}

export function DatasetAccessStatusResponseToJSON(value?: DatasetAccessStatusResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'expiration': ExpirationToJSON(value.expiration),
        'id': value.id,
        'isAvailable': value.isAvailable,
        'isUserUpload': value.isUserUpload,
        'permissions': ((value.permissions as Array<any>).map(PermissionToJSON)),
    };
}

