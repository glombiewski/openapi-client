/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ExpirationFromJSON, ExpirationToJSON, } from './Expiration';
import { PermissionFromJSON, PermissionToJSON, } from './Permission';
/**
 * Check if a given object implements the DatasetAccessStatusResponse interface.
 */
export function instanceOfDatasetAccessStatusResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "isAvailable" in value;
    isInstance = isInstance && "isUserUpload" in value;
    isInstance = isInstance && "permissions" in value;
    return isInstance;
}
export function DatasetAccessStatusResponseFromJSON(json) {
    return DatasetAccessStatusResponseFromJSONTyped(json, false);
}
export function DatasetAccessStatusResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'expiration': !exists(json, 'expiration') ? undefined : ExpirationFromJSON(json['expiration']),
        'id': json['id'],
        'isAvailable': json['isAvailable'],
        'isUserUpload': json['isUserUpload'],
        'permissions': (json['permissions'].map(PermissionFromJSON)),
    };
}
export function DatasetAccessStatusResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'expiration': ExpirationToJSON(value.expiration),
        'id': value.id,
        'isAvailable': value.isAvailable,
        'isUserUpload': value.isUserUpload,
        'permissions': (value.permissions.map(PermissionToJSON)),
    };
}
